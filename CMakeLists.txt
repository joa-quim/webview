cmake_minimum_required(VERSION 2.8)

project(webview)

if(APPLE)
	set(WEBVIEW_COMPILE_DEFS "-DWEBVIEW_COCOA=1")
	set(WEBVIEW_LIBS "-framework WebKit")
elseif(MSVC)
	set(WEBVIEW_COMPILE_DEFS "-DWEBVIEW_WINAPI=1")
	set (CMAKE_C_FLAGS "/D_CRT_SECURE_NO_WARNINGS /D_CRT_SECURE_NO_DEPRECATE ${CMAKE_C_FLAGS}")
elseif(WIN32)
	set(WEBVIEW_COMPILE_DEFS "-DWEBVIEW_WINAPI=1")
	set(WEBVIEW_LIBS "ole32 comctl32 oleaut32 uuid")
else()
	set(WEBVIEW_COMPILE_DEFS "-DWEBVIEW_GTK=1")
	find_package(PkgConfig REQUIRED)
	pkg_check_modules(GTK3 REQUIRED gtk+-3.0)
	pkg_check_modules(WEBKIT2 REQUIRED webkit2gtk-4.0)
	set(WEBVIEW_COMPILE_INCS ${GTK3_INCLUDE_DIRS} ${WEBKIT2_INCLUDE_DIRS} ${PROJECT_SOURCE_DIR})
	set(WEBVIEW_LIBS ${GTK3_LIBRARIES} ${WEBKIT2_LIBRARIES})
endif()

if(MSVC)
	add_library(webview_i ${CMAKE_CURRENT_BINARY_DIR}/webview.c)
	file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/webview.c "#define WEBVIEW_IMPLEMENTATION\n#include <webview.h>")
	target_include_directories(webview_i PUBLIC ${PROJECT_SOURCE_DIR} ${WEBVIEW_COMPILE_INCS})
	target_compile_definitions(webview_i PUBLIC ${WEBVIEW_COMPILE_DEFS})
	target_compile_options(webview_i PRIVATE ${WEBVIEW_COMPILE_OPTS})
	target_link_libraries(webview_i ${WEBVIEW_LIBS})
	if (CMAKE_SIZEOF_VOID_P EQUAL 8) 
		set_target_properties (webview_i PROPERTIES RUNTIME_OUTPUT_NAME webview_w64)
	else()
		set_target_properties (webview_i PROPERTIES RUNTIME_OUTPUT_NAME webview_w32)
	endif()
else()
	add_library(webview ${CMAKE_CURRENT_BINARY_DIR}/webview.c)
	file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/webview.c "#define WEBVIEW_IMPLEMENTATION\n#include <webview.h>")
	target_include_directories(webview PUBLIC ${PROJECT_SOURCE_DIR} ${WEBVIEW_COMPILE_INCS})
	target_compile_definitions(webview PUBLIC ${WEBVIEW_COMPILE_DEFS})
	target_compile_options(webview PRIVATE ${WEBVIEW_COMPILE_OPTS})
	target_link_libraries(webview ${WEBVIEW_LIBS})
endif()

add_executable(webview_test WIN32 MACOSX_BUNDLE webview_test.cc)
set_target_properties(webview_test PROPERTIES CXX_STANDARD 11 CXX_STANDARD_REQUIRED YES CXX_EXTENSIONS NO)
find_package(Threads)
if(MSVC)
	target_link_libraries(webview_test PRIVATE webview_i ${CMAKE_THREAD_LIBS_INIT})
else()
	target_link_libraries(webview_test PRIVATE webview ${CMAKE_THREAD_LIBS_INIT})
endif()
enable_testing ()
add_test(NAME webview_test COMMAND webview_test)
